version: '3'

services:
  trading-service:
    build:
      context: .
      dockerfile: .docker/node/Dockerfile
    image: grid-bot-nodejs
    container_name: trading-service
    restart: unless-stopped
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOSTNAME=${POSTGRES_HOSTNAME:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-gridbot}
      - DEV_POSTGRES_USERNAME=${DEV_POSTGRES_USERNAME:-postgres}
      - DEV_POSTGRES_PASSWORD=${DEV_POSTGRES_PASSWORD:-postgres}
      - DEV_POSTGRES_HOSTNAME=${DEV_POSTGRES_HOSTNAME:-postgres}
      - DEV_POSTGRES_PORT=${DEV_POSTGRES_PORT:-5432}
      - DEV_POSTGRES_DB=${DEV_POSTGRES_DB:-gridbot}
      - TEST_POSTGRES_USERNAME=${TEST_POSTGRES_USERNAME:-postgres}
      - TEST_POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD:-postgres}
      - TEST_POSTGRES_HOSTNAME=${TEST_POSTGRES_HOSTNAME:-postgres}
      - TEST_POSTGRES_PORT=${TEST_POSTGRES_PORT:-5432}
      - TEST_POSTGRES_DB=${TEST_POSTGRES_DB:-gridbot-test}
      - REDIS_SERVER=${REDIS_SERVER:-127.0.0.1}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      # - .:/usr/src/app
      # - /usr/src/app/node_modules
      - /dev/null:/usr/src/app/.env
      - ./logs:/usr/src/app/logs
    networks:
      - app-network
    #command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
    command: npm run start-events-watcher
    logging:
        driver: journald
        options:
            tag: trading-service

  events-watcher:
    image: grid-bot-nodejs
    container_name: events-watcher
    restart: unless-stopped
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOSTNAME=${POSTGRES_HOSTNAME:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-gridbot}
      - DEV_POSTGRES_USERNAME=${DEV_POSTGRES_USERNAME:-postgres}
      - DEV_POSTGRES_PASSWORD=${DEV_POSTGRES_PASSWORD:-postgres}
      - DEV_POSTGRES_HOSTNAME=${DEV_POSTGRES_HOSTNAME:-postgres}
      - DEV_POSTGRES_PORT=${DEV_POSTGRES_PORT:-5432}
      - DEV_POSTGRES_DB=${DEV_POSTGRES_DB:-gridbot}
      - TEST_POSTGRES_USERNAME=${TEST_POSTGRES_USERNAME:-postgres}
      - TEST_POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD:-postgres}
      - TEST_POSTGRES_HOSTNAME=${TEST_POSTGRES_HOSTNAME:-postgres}
      - TEST_POSTGRES_PORT=${TEST_POSTGRES_PORT:-5432}
      - TEST_POSTGRES_DB=${TEST_POSTGRES_DB:-gridbot-test}
      - REDIS_SERVER=${REDIS_SERVER:-127.0.0.1}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - NODE_ENV=${NODE_ENV:-}
    volumes:
      # - .:/usr/src/app
      # - /usr/src/app/node_modules
      - /dev/null:/usr/src/app/.env
      - ./logs:/usr/src/app/logs
    networks:
      - app-network
    #command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
    command: npm run start-trading-service
    logging:
        driver: journald
        options:
            tag: events-watcher

  notification-service:
    image: grid-bot-nodejs
    container_name: notification-service
    restart: unless-stopped
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOSTNAME=${POSTGRES_HOSTNAME:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-gridbot}
      - DEV_POSTGRES_USERNAME=${DEV_POSTGRES_USERNAME:-postgres}
      - DEV_POSTGRES_PASSWORD=${DEV_POSTGRES_PASSWORD:-postgres}
      - DEV_POSTGRES_HOSTNAME=${DEV_POSTGRES_HOSTNAME:-postgres}
      - DEV_POSTGRES_PORT=${DEV_POSTGRES_PORT:-5432}
      - DEV_POSTGRES_DB=${DEV_POSTGRES_DB:-gridbot}
      - TEST_POSTGRES_USERNAME=${TEST_POSTGRES_USERNAME:-postgres}
      - TEST_POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD:-postgres}
      - TEST_POSTGRES_HOSTNAME=${TEST_POSTGRES_HOSTNAME:-postgres}
      - TEST_POSTGRES_PORT=${TEST_POSTGRES_PORT:-5432}
      - TEST_POSTGRES_DB=${TEST_POSTGRES_DB:-gridbot-test}
      - REDIS_SERVER=${REDIS_SERVER:-127.0.0.1}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - NODE_ENV=${NODE_ENV:-}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_BOT_URL=${TELEGRAM_BOT_URL:-https://t.me/GridBotTestBot}
    volumes:
      # - .:/usr/src/app
      # - /usr/src/app/node_modules
      - /dev/null:/usr/src/app/.env
      - ./logs:/usr/src/app/logs
    networks:
      - app-network
    #command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
    command: npm run start-notification-service
    logging:
        driver: journald
        options:
            tag: notification-service

  sync-service:
    image: grid-bot-nodejs
    container_name: sync-service
    restart: unless-stopped
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOSTNAME=${POSTGRES_HOSTNAME:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-gridbot}
      - DEV_POSTGRES_USERNAME=${DEV_POSTGRES_USERNAME:-postgres}
      - DEV_POSTGRES_PASSWORD=${DEV_POSTGRES_PASSWORD:-postgres}
      - DEV_POSTGRES_HOSTNAME=${DEV_POSTGRES_HOSTNAME:-postgres}
      - DEV_POSTGRES_PORT=${DEV_POSTGRES_PORT:-5432}
      - DEV_POSTGRES_DB=${DEV_POSTGRES_DB:-gridbot}
      - TEST_POSTGRES_USERNAME=${TEST_POSTGRES_USERNAME:-postgres}
      - TEST_POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD:-postgres}
      - TEST_POSTGRES_HOSTNAME=${TEST_POSTGRES_HOSTNAME:-postgres}
      - TEST_POSTGRES_PORT=${TEST_POSTGRES_PORT:-5432}
      - TEST_POSTGRES_DB=${TEST_POSTGRES_DB:-gridbot-test}
      - REDIS_SERVER=${REDIS_SERVER:-127.0.0.1}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - NODE_ENV=${NODE_ENV:-}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_BOT_URL=${TELEGRAM_BOT_URL:-https://t.me/GridBotTestBot}
    volumes:
      # - .:/usr/src/app
      # - /usr/src/app/node_modules
      - /dev/null:/usr/src/app/.env
      - ./logs:/usr/src/app/logs
    networks:
      - app-network
    #command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
    command: npm run start-sync-service
    logging:
        driver: journald
        options:
            tag: sync-service

  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    ports:
      - '${POSTGRES_EXT_PORT:-5432}:5432'
    networks:
      - app-network
    volumes: 
      #- db:/var/lib/postgresql/data
      # use local folder to persist data
      - "${POSTGRES_PERSIST_FOLDER_OR_VOLUME:-./.data}:/var/lib/postgresql/data"
      #- ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '${REDIS_EXT_PORT:-6379}:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass '${REDIS_PASSWORD}'
    sysctls:
      - net.core.somaxconn=65535
    networks:
      - app-network

    volumes: 
      - redis:/data

volumes:
  postgres:
    driver: local
  redis:
    driver: local

networks:
  app-network:
    driver: bridge